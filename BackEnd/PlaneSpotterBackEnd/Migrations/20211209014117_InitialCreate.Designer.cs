// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlaneSpotterBackEnd.Models.DatabaseContext;

namespace PlaneSpotterBackEnd.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211209014117_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.Aircraft", b =>
                {
                    b.Property<string>("RegistrationId")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<Guid>("AircraftTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("RegistrationId");

                    b.HasIndex("AircraftTypeId");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.AircraftType", b =>
                {
                    b.Property<Guid>("AircraftTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("AircraftTypeId");

                    b.ToTable("AircraftTypes");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.Sighting", b =>
                {
                    b.Property<Guid>("SightingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AircraftRegistrationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("SpotterUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SightingId");

                    b.HasIndex("AircraftRegistrationId");

                    b.HasIndex("SpotterUserId");

                    b.ToTable("Sightings");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserRoleRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("UserRoleRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.UserRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.Aircraft", b =>
                {
                    b.HasOne("PlaneSpotterBackEnd.Models.Database.AircraftType", "AircraftType")
                        .WithMany("Aircrafts")
                        .HasForeignKey("AircraftTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AircraftType");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.Sighting", b =>
                {
                    b.HasOne("PlaneSpotterBackEnd.Models.Database.Aircraft", "Aircraft")
                        .WithMany("Sightings")
                        .HasForeignKey("AircraftRegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaneSpotterBackEnd.Models.Database.User", "Spotter")
                        .WithMany("Sightings")
                        .HasForeignKey("SpotterUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Spotter");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.User", b =>
                {
                    b.HasOne("PlaneSpotterBackEnd.Models.Database.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.Aircraft", b =>
                {
                    b.Navigation("Sightings");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.AircraftType", b =>
                {
                    b.Navigation("Aircrafts");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.User", b =>
                {
                    b.Navigation("Sightings");
                });

            modelBuilder.Entity("PlaneSpotterBackEnd.Models.Database.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
